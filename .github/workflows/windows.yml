name: Windows

on:
  push:
    branches: [ main, ci-sandbox ]
  pull_request:
    branches: [ main, ci-sandbox ]

env:
  MKL_URL: "https://romang.blob.core.windows.net/mariandev/ci/mkl-2020.1-windows-static.zip"

jobs:
  build-windows:
    strategy:
      matrix:
        include:
          # Windows CPU-only build
          - name: "Windows CPU-only"
            cuda: ""

    runs-on: windows-2019
    name: ${{ matrix.name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Download MKL
      run: |
        # Wget retries downloading files and is faster than Invoke-WebRequest
        C:\msys64\usr\bin\wget.exe -nv ${{ env.MKL_URL }} -O mkl.zip
        Expand-Archive -Force mkl.zip ${{ github.workspace }}\mkl
        # Set MKLROOT environment variable so that CMake can find MKL
        echo "MKLROOT=${{ github.workspace }}\mkl" | Out-File -FilePath $env:GITHUB_ENV  -Encoding utf8 -Append
      shell: powershell

    - name: Prepare vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        vcpkgArguments: protobuf pcre2
        vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da 
        vcpkgDirectory: ${{ github.workspace }}/vcpkg/
        vcpkgTriplet: x64-windows-static

    # Windows CPU only minimal build
    - name: Build Release
      uses: lukka/run-cmake@v3
      with:
        buildDirectory: ${{ github.workspace }}/build/Release
        cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A x64
          -DCMAKE_BUILD_TYPE="Release"
          -DUSE_WASM_COMPATIBLE_SOURCE="OFF"
          -DUSE_STATIC_LIBS="TRUE"'
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
        useVcpkgToolchainFile: true


    - name: Print versions
      working-directory: build/Release
      run: |
        .\app\service-cli.exe --version
        dir *.exe
      shell: cmd
